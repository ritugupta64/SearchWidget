{"version":3,"sources":["components/SearchBar.js","components/SearchList.js","app.js","index.js"],"names":["SearchBar","props","onHandleChange","e","setState","searchVal","target","value","onSearchBar","searchText","state","type","this","name","onChange","onClick","Component","SearchList","date","bind","dateTimeStamp","Date","milliseconds","getTime","hours","getHours","slice","minutes","getMinutes","seconds","getSeconds","console","log","items","searchListItems","map","item","i","key","style","padding","marginBottom","borderBottom","className","passGridEvent","title","color","publishedAt","passOrder","loadMore","App","onHandleGridView","gridView","listView","onHandleListView","fetchSearchItem","a","per","page","axios","get","response","newData","searchItem","concat","data","articles","scrolling","onHandleOrder","sort","b","direction","parse","prevState","totalResults","scrollItem","React","createRef","display","passListEvent","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.1527ee4d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        searchVal: \"\"\r\n    };\r\n  }\r\n\r\n  onHandleChange = e => {\r\n    this.setState({\r\n        searchVal: e.target.value\r\n    });\r\n  };\r\n\r\n  onSearchBar = () => {\r\n    this.props.searchText(this.state.searchVal)\r\n  };\r\n\r\n//   componentDidUpdate() {\r\n//     if (this.props.searchText.length > 0) {\r\n//       setInterval(() => {\r\n//         this.props.searchText(this.state.searchVal)\r\n//       }, 30000);\r\n//     }\r\n//   }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.searchVal}\r\n          name=\"searchItem\"\r\n          onChange={this.onHandleChange}\r\n        />\r\n\r\n        <button type=\"button\" onClick={this.onSearchBar}>\r\n          Search\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\n// import {date} from './utilities/utilities'\r\n\r\nclass SearchList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.date = this.date.bind(this);\r\n  }\r\n\r\n  date(dateTimeStamp) {\r\n    let date = new Date(dateTimeStamp);\r\n    let timeMilliSeconds = date.getTime();\r\n    const milliseconds = timeMilliSeconds;\r\n\r\n    const hours = `0${new Date(milliseconds).getHours() - 1}`.slice(-2);\r\n    const minutes = `0${new Date(milliseconds).getMinutes()}`.slice(-2);\r\n    const seconds = `0${new Date(milliseconds).getSeconds()}`.slice(-2);\r\n\r\n    const time = `${hours}:${minutes}:${seconds}`;\r\n    return time;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.interval = setInterval(() => this.fetchSearchItem(), 3000);\r\n    console.log(\"B\");\r\n  }\r\n\r\n  render() {\r\n    const items = this.props.searchListItems.map((item, i) => {\r\n      \r\n      return (\r\n\r\n        <div key={i} style={{padding: '20px', marginBottom: '10px', borderBottom: '1px solid red'}} className={this.props.passGridEvent ? \"Grid itemsContainer\" : \"list itemsContainer\"}>\r\n          {item.title}\r\n\r\n          <br />\r\n\r\n          <span style={{ color: \"red\" }}>\r\n            {this.date(item.publishedAt)} <br />\r\n          </span>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className = \"searchContainer\">\r\n        search List\r\n        <div onClick = {() => this.props.passOrder('publishedAt')}>sorting</div>\r\n        {items}\r\n        <button onClick = {(e)=>this.props.loadMore()}>Load</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchList;\r\n","import React, { Component } from \"react\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport axios from \"axios\";\r\nimport SearchList from \"./components/SearchList\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchItem: [],\r\n      gridView: true,\r\n      listView: false,\r\n      direction: {\r\n        publishedAt: \"asc\"\r\n      },\r\n      per: 10,\r\n      page: 1,\r\n      totalResults: null\r\n    };\r\n\r\n    this.scrollItem = React.createRef();\r\n  }\r\n\r\n  onHandleGridView = () => {\r\n    console.log(\"grid\");\r\n    this.setState({\r\n      gridView: true,\r\n      listView: false\r\n    });\r\n  };\r\n\r\n  onHandleListView = () => {\r\n    console.log(\"list\");\r\n    this.setState({\r\n      gridView: false,\r\n      listView: true\r\n    });\r\n  };\r\n\r\n  fetchSearchItem = async item => {\r\n    const { per, page } = this.state;\r\n    const response = await axios.get(\r\n      `https://newsapi.org/v2/everything?q=${item}&apiKey=363d26dd3d664d199ca63adc371e22aa&pageSize=${per}&page=${page}&sortBy=publishedAt`\r\n    );\r\n\r\n    var newData = this.state.searchItem.concat(response.data.articles);\r\n    this.setState({\r\n      searchItem: newData,\r\n      scrolling: false\r\n      // totalResults: response.data.totalResults\r\n    });\r\n    console.log(response);\r\n    // console.log(this.state.totalResults)\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   // this.interval = setInterval(() => this.fetchSearchItem(), 3000);\r\n  //   console.log(\"A\");\r\n  // }\r\n\r\n  //   componentDidUpdate() {\r\n  //     if (this.state.searchItem.length > 0) {\r\n  //       setInterval(() => {\r\n  //         this.fetchSearchItem();\r\n  //       }, 30000);\r\n  //     }\r\n  //   }\r\n\r\n  //   componentWillUnmount() {\r\n  //     clearInterval(this.interval);\r\n  //   }\r\n\r\n  onHandleOrder = key => {\r\n    this.setState({\r\n      searchItem: this.state.searchItem.sort((a, b) =>\r\n        this.state.direction[key] === \"asc\"\r\n          ? Date.parse(\"01/01/2013 \" + a)[key] >\r\n            Date.parse(\"01/01/2013 \" + b)[key]\r\n          : Date.parse(\"01/01/2013 \" + b)[key] <\r\n            Date.parse(\"01/01/2013 \" + a)[key]\r\n      )\r\n    });\r\n\r\n    console.log(\"order\");\r\n  };\r\n\r\n  loadMore = () => {\r\n    this.setState(\r\n      prevState => ({\r\n        page: prevState.page + 1,\r\n        scrolling: true\r\n      }),\r\n\r\n      this.fetchSearchItem\r\n    );\r\n  };\r\n\r\n\r\n\r\n  // handleScroll = () => { \r\n  //  // console.log('test')\r\n  //   var lastLi = document.querySelector(\".searchContainer > itemsContainer:last-child\");\r\n  //   var lastLiOffset = lastLi.offsetTop + lastLi.clientHeight;\r\n  //   var pageOffset = window.pageYOffset + window.innerHeight;\r\n  // if (pageOffset > lastLiOffset) {\r\n  //        this.loadMore();\r\n  //   }\r\n  // };\r\n\r\n  // componentDidMount(){\r\n   \r\n  //   this.scrollItem.current.addEventListener(\"scroll\", this.handleScroll)\r\n  // }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        App\r\n        <span\r\n          style={{ padding: \"20px\", display: \"inline-block\", color: \"red\" }}\r\n          onClick={this.onHandleGridView}\r\n        >\r\n          Grid\r\n        </span>\r\n        <span\r\n          style={{ padding: \"20px\", display: \"inline-block\", color: \"green\" }}\r\n          onClick={this.onHandleListView}\r\n        >\r\n          List\r\n        </span>\r\n        \r\n        <SearchBar searchText={this.fetchSearchItem} />\r\n       \r\n        \r\n        <SearchList\r\n          searchListItems={this.state.searchItem}\r\n          passGridEvent={this.state.gridView}\r\n          passListEvent={this.state.listView}\r\n          passOrder={this.onHandleOrder}\r\n          loadMore={this.loadMore}\r\n        />\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './app';\r\n\r\n\r\nReactDom.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}